version: '3'
networks:
  pulsar:
    driver: bridge
  sidecar:
    driver: bridge
services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - ./connectors/pulsar:/pulsar/connectors
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"

  # MySQL8
  companiasdb:
    image: mysql:8
    hostname: companiasdb
    container_name: companiasdb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=propiedades
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["db"]
    networks:
      - pulsar
    ports:
      - '3306:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  
  # MySQL8
  geograficosdb:
    image: mysql:8
    hostname: geograficosdb
    container_name: geograficosdb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=geograficos
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: ["db"]
    networks:
      - pulsar
    ports:
      - '3308:3306'
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # MySQL8
  auditoriadb:
    image: mysql:8
    hostname: auditoriadb
    container_name: auditoriadb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=auditoria
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: [ "db" ]
    networks:
      - pulsar
    ports:
      - '3307:3306'
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # MySQL8
  propiedadesdb:
    image: mysql:8
    hostname: propiedadesdb
    container_name: propiedadesdb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=propiedades
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: [ "db" ]
    networks:
      - pulsar
    ports:
      - '3309:3306'
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # MySQL8
  sagalogdb:
    image: mysql:8
    hostname: sagalogdb
    container_name: sagalogdb
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=sagalog
      - MYSQL_ROOT_PASSWORD=adminadmin
    profiles: [ "db" ]
    networks:
      - pulsar
    ports:
      - '3310:3306'
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Servicios de Companias
  companias:
    container_name: propiedades
    hostname: propiedades
    image: propiedades/flask
    profiles: ["propiedades"]
    networks:
      - sidecar
      - pulsar
    labels:
      SidecarDiscover: "false"
    depends_on:
      - broker
      - companiasdb
    environment:
      - COMPANIAS_ADDRESS=propiedades
      - PULSAR_ADDRESS=broker
    ports:
      - "5000:5000"

  # Servicio BFF
  bff:
    container_name: bff
    hostname: bff
    image: bff
    profiles: ["bff"]
    depends_on:
      - broker
    environment:
      - COMPANIAS_ADDRESS=propiedades
      - BROKER_HOST=broker
    networks:
      - pulsar
    ports:
      - "8003:8003"